services:
  nginx:
    image: nginx:latest
    ports:
      - "18880:80"     # 외부에서 접근할 포트
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - app
    networks:
      - app-network

  app:
    image: webflux-streaming-app
    expose:
      - "8080"      # 내부 네트워크에만 노출
    depends_on:
      mysql:
        condition: service_started # MySQL은 컨테이너가 시작될 때까지 기다림
      elasticsearch:
        condition: service_healthy
    #    volumes: # 스트리밍 서버와 연결할 미디어 볼륨
#      - "D:\\:/mnt/host/d"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_DATABASE=webflux
      - MYSQL_USER=admin
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=rootpassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  elasticsearch:
    # image: elasticsearch:8.13.4
    build: ./elasticsearch # Dockerfile이 있는 디렉토리 지정
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false # 보안 비활성화 (개발/테스트용, 프로덕션에서는 활성화 권장)
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail http://localhost:9200/_cluster/health || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  mysql_data:
  elasticsearch_data:

networks:
  app-network:
    driver: bridge